{"version":3,"sources":["webpack:///path---p-js-26a83b168a562dde6576.js","webpack:///./.cache/json/p-js.json"],"names":["webpackJsonp","501","module","exports","data","allMarkdownRemark","edges","node","excerpt","frontmatter","path","title","section","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,QAAUC,MAAQC,QAAA,wLAAAC,aAAiNC,KAAA,gBAAAC,MAAA,UAAAC,QAAA,SAA4DL,MAAQC,QAAA,wLAAAC,aAAiNC,KAAA,oBAAAC,MAAA,cAAAC,QAAA,SAAoEL,MAAQC,QAAA,sLAAAC,aAA+MC,KAAA,mBAAAC,MAAA,aAAAC,QAAA,SAAkEL,MAAQC,QAAA,qLAAAC,aAA8MC,KAAA,oBAAAC,MAAA,cAAAC,QAAA,SAAoEL,MAAQC,QAAA,wLAAAC,aAAiNC,KAAA,yBAAAC,MAAA,mBAAAC,QAAA,SAA8EL,MAAQC,QAAA,wLAAAC,aAAiNC,KAAA,aAAAC,MAAA,eAAAC,QAAA,WAA+DC,aAAgBD,QAAA","file":"path---p-js-26a83b168a562dde6576.js","sourcesContent":["webpackJsonp([21735359339305],{\n\n/***/ 501:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"excerpt\":\"  A promise is an object that is a placeholder of a deferred computation. Invariants a promise is in one of 3  mutually  exclusive states:  fulfilled, rejected or pending a promise…\",\"frontmatter\":{\"path\":\"/p/js/promise\",\"title\":\"Promise\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"The api of an es6 module is static:  imports/exports can only be defined at the top level once defined these bindings cannot be changed. they are singleton, one instance per module…\",\"frontmatter\":{\"path\":\"/p/js/es6-modules\",\"title\":\"Es6 Modules\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"scope block execution context visibility after declaration hoisted can add property to global object no yes redeclaration SyntaxError works use before init (R-Value lookup) Error…\",\"frontmatter\":{\"path\":\"/p/js/let-vs-var\",\"title\":\"Let vs Var\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"Description  Opt-in using the pragma  Applied to the top of a function makes the whole function run in strict mode.\\nApplied to the top of a script makes the whole script run in…\",\"frontmatter\":{\"path\":\"/p/js/strict-mode\",\"title\":\"Strict Mode\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"Definition   Js is a object-oriented language where objects can be connect and share properties.\\n  Objects can be constructed using  constructor  functions.   A  constructor  is a…\",\"frontmatter\":{\"path\":\"/p/js/object-and-types\",\"title\":\"Object and Types\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"Nomenclature Execution context   a record created during function invocation.\\n  it holds information about where and how the function was invoked,\\n  arguments passed, a reference…\",\"frontmatter\":{\"path\":\"/p/js/this\",\"title\":\"What's This?\",\"section\":\"js\"}}}]}},\"pathContext\":{\"section\":\"js\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---p-js-26a83b168a562dde6576.js","module.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"excerpt\":\"  A promise is an object that is a placeholder of a deferred computation. Invariants a promise is in one of 3  mutually  exclusive states:  fulfilled, rejected or pending a promise…\",\"frontmatter\":{\"path\":\"/p/js/promise\",\"title\":\"Promise\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"The api of an es6 module is static:  imports/exports can only be defined at the top level once defined these bindings cannot be changed. they are singleton, one instance per module…\",\"frontmatter\":{\"path\":\"/p/js/es6-modules\",\"title\":\"Es6 Modules\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"scope block execution context visibility after declaration hoisted can add property to global object no yes redeclaration SyntaxError works use before init (R-Value lookup) Error…\",\"frontmatter\":{\"path\":\"/p/js/let-vs-var\",\"title\":\"Let vs Var\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"Description  Opt-in using the pragma  Applied to the top of a function makes the whole function run in strict mode.\\nApplied to the top of a script makes the whole script run in…\",\"frontmatter\":{\"path\":\"/p/js/strict-mode\",\"title\":\"Strict Mode\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"Definition   Js is a object-oriented language where objects can be connect and share properties.\\n  Objects can be constructed using  constructor  functions.   A  constructor  is a…\",\"frontmatter\":{\"path\":\"/p/js/object-and-types\",\"title\":\"Object and Types\",\"section\":\"js\"}}},{\"node\":{\"excerpt\":\"Nomenclature Execution context   a record created during function invocation.\\n  it holds information about where and how the function was invoked,\\n  arguments passed, a reference…\",\"frontmatter\":{\"path\":\"/p/js/this\",\"title\":\"What's This?\",\"section\":\"js\"}}}]}},\"pathContext\":{\"section\":\"js\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/p-js.json\n// module id = 501\n// module chunks = 21735359339305"],"sourceRoot":""}